```trycmd
$ spcasm -w all -r 40 tests/opcodes.s

```

```trycmd
$ spcasm -r 1 tests/user-macro.spcasmtest
? 1
spcasm::directive::recursion_limit

  × Maximum recursion depth 1 was exceeded while expanding 'has_argument'
    ╭─[tests/user-macro.spcasmtest:14:3]
 11 │ macro do_stuff(first, second)
 12 │   mov a,<first>-7
 13 │   %do_nothing()
 14 │   %has_argument(<first>)
    ·   ───────────┬──────────
    ·              ╰── While trying to expand this
 15 │   mov x,~<second>
 16 │ endmacro
 17 │ 
    ╰────
  help: This is most likely caused by an infinite recursion in a macro calling
        itself. On the command line, use `--macro-recursion-limit` to increase
        the limit.


```

```trycmd
$ spcasm -r 0 tests/user-macro.spcasmtest
? 1
spcasm::directive::recursion_limit

  × Maximum recursion depth 0 was exceeded while expanding 'do_nothing'
    ╭─[tests/user-macro.spcasmtest:13:3]
 10 │ ; Macro with argument and simple recursion
 11 │ macro do_stuff(first, second)
 12 │   mov a,<first>-7
 13 │   %do_nothing()
    ·   ──────┬──────
    ·         ╰── While trying to expand this
 14 │   %has_argument(<first>)
 15 │   mov x,~<second>
 16 │ endmacro
    ╰────
  help: This is most likely caused by an infinite recursion in a macro calling
        itself. On the command line, use `--macro-recursion-limit` to increase
        the limit.


```

```trycmd
$ spcasm -w all -l 10000 tests/opcodes.s

```

```trycmd
$ spcasm -w all -l 1 tests/opcodes.s

```

```trycmd
$ spcasm -w all -l 0 tests/opcodes.s
? 1
spcasm::reference::unresolved

  × Reference 'data' can not be resolved to a value
    ╭─[tests/opcodes.s:14:1]
 11 │    MOV A,$3320+X ;= F5 20 33
 12 │    MOV A,$FF00+Y ;= F6 00 FF
 13 │    MOV A,($40+X) ;= E7 40
 14 │ data:         ; @ 13
    · ──┬─
    ·   ╰── 'data' defined here
 15 │    MOV A,(%00100000)+Y ;= F7 20
 16 │    MOV X,#$60    ;= CD 60
 17 │    MOV X,$9A     ;= F8 9A
 18 │    MOV X,$2E+Y   ;= F9 2E
 19 │    MOV X,$2F00   ;= E9 00 2F
 20 │    MOV Y,#$0F    ;= 8D 0F
 21 │    MOV Y,$48     ;= EB 48
 22 │    MOV Y,%01+X   ;= FB 01
 23 │    MOV Y,$2100   ;= EC 00 21
 24 │ 
 25 │    MOV A,#data     ;= E8 13
    ·    ────────────┬───────────
    ·                ╰── Used here
 26 │    MOV A,data      ;= E4 13
 27 │    MOV A,data+X    ;= F4 13
 28 │    MOV A,data+Y    ;= F6 13 00
    ╰────
  help: Any symbolic reference must be defined somewhere. Did you misspell the
        reference's name?
        This error is sometimes caused by too few reference resolution passes.
        Use `--reference-pass-limit` to increase the limit on the number of
        passes.


```
